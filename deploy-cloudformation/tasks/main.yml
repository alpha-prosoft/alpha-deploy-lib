- set_fact:
    params_old: '{{ params }}'

- name: 'Add settings to params'
  set_fact:
    params: '{{ params | combine({ item.key : item.value }) }}'
  with_dict: '{{ settings }}'
  when: settings is defined

- set_fact:
    params: '{{ params | default([]) | combine(local_params) }}'
  when:
    local_params is defined

- set_fact:
    default_stack_name: '{{ params["EnvironmentNameUpper"] }}-{{ type }}-{{ params["ServiceName"] }}-stack'

- set_fact:
    final_stack_name: '{{ stack_name | default(default_stack_name, true) }}'

- name: 'Check if stack is in ROLLBACK_COMPLETE state'
  shell: |
      aws cloudformation describe-stacks \
          --stack-name "{{ final_stack_name }}"  \
          --region {{ settings["Region"] | default(params["Region"]) }} \
          --query Stacks[].StackStatus \
          --output text 2> /dev/null || echo "ERROR"
  register: stack_status

- name: 'Delete stack when it is in ROLLBACK_COMPLETE state'
  cloudformation:
    stack_name: '{{ final_stack_name }}'
    state: 'absent'
    region: '{{ settings["Region"] | default(params["Region"]) }}'
  when: stack_status.stdout ==  "ROLLBACK_COMPLETE"

- name: 'Extract CloudFormation params'
  shell: "yq .Parameters {{ cloud_formation }} | jq -r 'keys[]'"
  register: valid_params

- set_fact:
    applicable_params: {}

- name: 'Find applicable params'
  set_fact:
    applicable_params: '{{ applicable_params | combine({ item : params[item] }) }}'
  with_items: '{{ valid_params.stdout_lines  }}'
  when: item in params


- debug:
    var: applicable_params

- tempfile:
    state: file
  register: cf_temp_file

- template:
    src: '{{ cloud_formation }}'
    dest: '{{ cf_temp_file.path }}'

- name: 'Deploy cloudformation stack'
  cloudformation:
    stack_name: '{{ final_stack_name }}'
    state: 'present'
    region: '{{ settings["Region"] | default(params["Region"]) }}'
    disable_rollback: false
    template: '{{ cf_temp_file.path }}'
    template_parameters: '{{ applicable_params }}'
    tags: '{{ resource_tags }}'
    capabilities: '{{ params.get("Capabilities", omit) }}'
  environment: '{{ params }}'
  register: cloud_formation_output

- set_fact:
    params: '{{ params_old }}'
